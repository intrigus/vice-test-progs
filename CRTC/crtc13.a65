DEBUGREG = $8bff

	; This program utilizes the vertical retrace IRQ 
	; to open the bertical vorders.
	; It assumes graphics/uppercase mode:
	; 
 	; cycles/line = 59
	; irq-to-screen-cycles = 3953 
	; lines/char = 8
	; original hsync value = $2c = 44
	;	
	; It uses the VIA timer to step from the original vsync IRQ to
	; the next rasterline. This or course doubles the jitter,

	; well...
	

IRQ2SCREEN	= 3953
CYCLESPERLINE	= 59
LINESPERCHAR	= 8
ORIGHSYNC	= 44

	; ADJUST is to account for the interrupt code
	; 2* ROM irq code + time from newirq to rl=0
ADJUST		= (2*36+10)

	; value to set the VIA timer to after vsync
	; we have to substract one rasterline because the position is 
	; determined by the time between the last line´s sync and 
	; the first cycle of the line.
OFFSET = IRQ2SCREEN + (CYCLESPERLINE * ((LINESPERCHAR * 23) - 0)) - ADJUST

	.word $0401
	*=$0401

	.word endline
	.word 10

	.byt $9e
	.asc "1056", 0
endline	.word 0
	.dsb 1056-*, 0

	; start of prg 

irqvec	=$90
irqmode	=$033c
irqsave	=$033d

        lda #142        ; graphics/uppercase
        jsr $ffd2
        lda #147        ; clr home
        jsr $ffd2

	jsr setcrtc
        
        lda #"0"
        jsr $ffd2
        ldy #24
        lda #"1"
lll1
        pha
        lda #17
        jsr $ffd2
        pla
        jsr $ffd2
        clc
        adc #1
        cmp #"9"+1
        bne lll
        lda #"0"
lll     dey
        bne lll1
        lda #19
        jsr $ffd2

	lda irqvec
	sta irqsave
	lda irqvec+1
	sta irqsave+1

	lda #0
	sta irqmode

	sei
	lda #<newirq
	sta irqvec
	lda #>newirq
	sta irqvec+1
	cli

	jmp theend

	; Interrupt routine. 
	; The CRTC interrupt is triggered at the leading edge of
	; the vertical sync pulse. 
	;
	; For a 50Hz (europe) 80 columns machine in graphics/upper case
 	; mode (8 rasterlines/char, 59 cycles/rasterline)
	; a frame takes 20001 cycles. vsync starts at cycle 16048 
	; counted from the first visible screen cycle (first rasterline
	; of character at $8000), so we have about 3953 cycles till
	; start of screen.
	;
	; The ROM interrupt routine takes 36 cycles.

newirq	.(
	lda $e813
	bmi vsync

	lda $e848	; clear VIA T2 IRQ flag

	; this is at the beginning of the 23rd charline rasterline

	;rl = 0
        lda #6
        sta $e880
        lda #20
        sta $e881               ; vertical displayed rows

	ldy #255
	; rl=13
ll0	dey			; wait .. rasterlines
	bne ll0

	ldy #30
ll1	dey
	bne ll1

	lda #6
	sta $e880
	lda #25
	sta $e881		; vertical displayed rows

	jmp $e600

vsync
	; set IRQ to the beginning of the 1st scanline of the 23rd charline
	; this routine takes approx. 33 cycles
	; jmp (irqsave)

	lda #0
	sta $e84b	; T1 oneshot mode
	lda #$a0
	sta $e84e	; enable T2 IRQ
	sta $e84d	; clear T2 IRQ flag
	lda #<OFFSET-33
	ldy #>OFFSET-33
	sta $e848
	sty $e849	
	inc framecount
	jmp (irqsave)
	.)

theend:

            jsr waitframe
            lda #0
            sta DEBUGREG
            jmp *

framecount:
    .byt $ff - 20
            
waitframe:
            lda framecount
            bne waitframe
            rts

setcrtc .(
        ldx #0
loop    lda regs,x
        stx $e880
        sta $e881
        inx
        cpx #10
        bcc loop
        rts

regs    .byt $3a, $28, $2c, $08
        .byt $29, $03, $19, $22
        .byt $00, $07
        .)
            
