 .word $0801

; *** Symbol table  follows ***
 zINDEX        = $22
 vControl      = $D011
 vSprEnable    = $D015
 sVoc3Control  = $D412
 sVoc3AttDec   = $D413
 sVoc3SusRel   = $D414
 sVoc3Env      = $D41C
 kCHROUT       = $FFD2

; *** text follows ***

    * = $0801
    .byte $0b,$08,$01,$00,$9e,$32,$30,$36,$31,$00,$00,$00
    jmp start
        
    .dsb $1000 - *, 0

 *=$1000
start
    ldx #0
    stx fails+1
    stx round+1
    stx $d020 
    stx $d021
    inx
    stx $0286

    JSR disable

    LDX #<text
    LDY #>text
    JSR print

    ; Release to zero
    LDA #$00
    STA sVoc3AttDec
    STA sVoc3Control

    LDA #$00
zero    
    CMP sVoc3Env
    BNE zero

    ; Start attack
    LDA #$F0
    STA sVoc3SusRel
    LDA #$01
    STA sVoc3Control

    ; Wait for env = $ff
    LDA #$FF
envff    
    CMP sVoc3Env
    BNE envff

    LDA #$F0
step    
    STA sVoc3SusRel
    PHA

    ; Wait long enough for counter to stop.
    JSR vblank
    JSR vblank

    ; Get sustain value.
    LDA sVoc3Env

round:
    ldy #0
    ldx #13    ; l.green
    cmp reflo,y
    beq pass
    ldx #10    ; l.red
    inc fails+1
pass
    stx $0286
    
    ; Print value.
    PHA
    LSR
    LSR
    LSR
    LSR
    JSR hexout
    PLA
    AND #$0F
    JSR hexout

    LDA #13
    JSR kCHROUT

    inc round+1
    
    ; Decrement sustain setting.
    PLA
    SEC
    SBC #$10
    BCS step

    ; Release.
    LDA #$00
    STA sVoc3AttDec
    STA sVoc3SusRel
    STA sVoc3Control

    JSR enable
    
    ldx #13    ; l.green
    ldy #0
fails
    lda #0
    beq allpass
    ldx #10    ; l.red
    ldy #$ff
allpass
    stx $d020
    sty $d7ff
    
    jmp *

disable    SEI
    LDA #$00
    STA vSprEnable
    LDA vControl
    AND #$EF
    STA vControl
vblank    ; Wait for vblank (raster = 0)
raslo    
    BIT vControl
    BPL raslo
rashi    
    BIT vControl
    BMI rashi
    RTS

enable    
    LDA vControl
    ORA #$10
    STA vControl
    CLI
    RTS

hexout    
    CMP #10
    BCC digit
    CLC
    ADC #$07
digit    
    ADC #$30
    JSR kCHROUT
    RTS

print    
    STX zINDEX
    STY zINDEX+1
    LDY #$00
nxtchr    
    LDA (zINDEX),Y
    BEQ done
    JSR kCHROUT
    INY
    JMP nxtchr
done    
    RTS

text    
    .byte $93
    .asc "ENVELOPE SUSTAIN VALUES:"
    .byte 13, 13, 0

reflo:
    .byte $ff
    .byte $ee
    .byte $dd
    .byte $cc
    .byte $bb
    .byte $aa
    .byte $99
    .byte $88
    .byte $77
    .byte $66
    .byte $55
    .byte $44
    .byte $33
    .byte $22
    .byte $11
    .byte $00
    
